---
layout: post
title: Path Sum
date: 2015-11-06 22:16:08.000000000 -05:00
tags:
- Algorithm
categories:
- Binary Search Tree
author: Jason
---
**Given a binary tree and a sum, determine if the tree has a root-to-leaf path such that adding up all the values along the path equals the given sum.**


``` java
public class Solution {
    public boolean hasPathSum(TreeNode root, int sum) {
        if (root == null) {
            return false;
        }
        if (root.left == null && root.right == null) {
            return root.val == sum;
        } else {
            return hasPathSum(root.left, sum - root.val) || hasPathSum(root.right, sum - root.val);
        }
    }
}
```

``` python
class Solution(object):
    def hasPathSum(self, root, sum):
        """
        :type root: TreeNode
        :type sum: int
        :rtype: bool
        """

        if not root:
            return False

        if not root.left and not root.right and root.val == sum:
            return True

        if self.hasPathSum(root.left, sum - root.val) or self.hasPathSum(root.right, sum - root.val):
            return True

        return False
```
