---
layout: post
title: Flip Bits
date: 2015-10-21 02:08:11.000000000 -04:00
type: post
published: true
status: publish
categories:
- Bit
- Integer
tags: []
meta:
  _edit_last: '1'
  _wpcom_is_markdown: '1'
  _spost_short_title: ''
  _jetpack_related_posts_cache: a:1:{s:32:"8f6677c9d6b0f903e98ad32ec61f8deb";a:2:{s:7:"expires";i:1468408681;s:7:"payload";a:3:{i:0;a:1:{s:2:"id";i:182;}i:1;a:1:{s:2:"id";i:966;}i:2;a:1:{s:2:"id";i:194;}}}}
author:
  login: johnny.lyy@gmail.com
  email: johnny.lyy@gmail.com
  display_name: johnny.lyy@gmail.com
  first_name: ''
  last_name: ''
---
<p><strong><em>Determine the number of bits required to flip if you want to convert integer n to integer m.</em></strong><br />
[expand title="code"]</p>
<pre>
class Solution {
    /**
     *@param a, b: Two integer
     *return: An integer
     */
    public static int bitSwapRequired(int a, int b) {
        // write your code here
        int mask = a ^ b;
        int count = 0;
        int number = 32;
        //while(mask != 0){
        //the int can be negative, and thus it will never get to zero
        //using a number to control how many times with move right a bit.
        while(number > 0){
            if((mask & 1) == 1)  count++;
            number--;
            mask >>= 1;
        }
        return count;
    }
};
</pre>
<p>[/expand]</p>
