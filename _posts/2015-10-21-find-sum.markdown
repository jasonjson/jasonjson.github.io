---
layout: post
title: Find sum
date: 2015-10-21 02:09:56.000000000 -04:00
type: post
published: true
status: publish
categories:
- String
tags: []
meta:
  _wpcom_is_markdown: '1'
  _edit_last: '1'
  _spost_short_title: ''
  _jetpack_related_posts_cache: a:1:{s:32:"8f6677c9d6b0f903e98ad32ec61f8deb";a:2:{s:7:"expires";i:1458094011;s:7:"payload";a:3:{i:0;a:1:{s:2:"id";i:93;}i:1;a:1:{s:2:"id";i:1587;}i:2;a:1:{s:2:"id";i:545;}}}}
author:
  login: johnny.lyy@gmail.com
  email: johnny.lyy@gmail.com
  display_name: johnny.lyy@gmail.com
  first_name: ''
  last_name: ''
---
<p><strong><em>find the length of longest substring with left sum equal to right sum</em></strong><br />
[expand title="code"]</p>
<pre>
public class Solution {
    public static int find(String s) {
        if (s == null) return 0;

        int maxLen = 0;
        for (int i = 1; i < s.length(); i++) {
            int start = i - 1, end = i;
            int leftSum = 0, rightSum = 0, len = 0;
            while (start - len  >= 0 && end + len < s.length()) {
                leftSum += Character.getNumericValue(s.charAt(start - len));
                rightSum += Character.getNumericValue(s.charAt(end + len));
                if (leftSum == rightSum) {
                    //update maxLen if we have found one 
                    maxLen = Math.max(maxLen, 2 * (len + 1));
                }
                len++;//we always go as far as i can
            }
        }
        return maxLen;
    }
}
</pre>
<p>[/expand]</p>
